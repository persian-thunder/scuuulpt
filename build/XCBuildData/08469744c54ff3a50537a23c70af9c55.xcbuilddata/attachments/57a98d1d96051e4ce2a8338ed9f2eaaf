#!/usr/bin/env bash
#!/usr/bin/env bash
TARGET_DIR="$SRCROOT/../../lib/ios/"
ATTRIBUTE_CHECK=$(xattr -p com.apple.xcode.CreatedByBuildSystem "$TARGET_DIR" 2>/dev/null)
if [ -z "$ATTRIBUTE_CHECK" ]; then
  xattr -w com.apple.xcode.CreatedByBuildSystem true "$TARGET_DIR"
  echo "Attribute com.apple.xcode.CreatedByBuildSystem set to true for [$TARGET_DIR]"
else
  echo "Attribute com.apple.xcode.CreatedByBuildSystem already set for [$TARGET_DIR]"
fi

TARGET_DIR="${SRCROOT}/../../lib/ios/"
TARGET_CONFIG_DIR="${SRCROOT}/../../lib/ios/build/output"

if [ "${CONFIGURATION}" == "Release" ]; then
    STATIC_NAME="openFrameworksiOS"
else
    STATIC_NAME="openFrameworksiOS${CONFIGURATION}"
fi

SOURCE_FILE="${TARGET_CONFIG_DIR}/${STATIC_NAME}.a"
DEST_FILE="${TARGET_DIR}/${STATIC_NAME}.a"

echo "Configuration: ${CONFIGURATION}"
echo "Source file: ${SOURCE_FILE}"
echo "Destination: ${DEST_FILE}"

mkdir -p "${TARGET_DIR}"

if [ ! -w "${TARGET_DIR}" ]; then
    echo "ERROR: Target directory ${TARGET_DIR} is not writable."
    ls -ld "${TARGET_DIR}"
    exit 1
fi

if [ ! -f "${SOURCE_FILE}" ]; then
    echo "ERROR: Static library ${SOURCE_FILE} does not exist."
    exit 1
fi

echo "Copying ${SOURCE_FILE} to ${DEST_FILE}..."
cp -v "${SOURCE_FILE}" "${DEST_FILE}"

if [ $? -ne 0 ]; then
    echo "ERROR: Failed to copy ${SOURCE_FILE} to ${DEST_FILE}."
    exit 1
fi

echo "openFramworks build successful."


